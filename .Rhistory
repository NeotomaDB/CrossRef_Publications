noisew(f=440, d=1)
synth(f=22050,d=1,cf=4000,am=c(50,10), listen=TRUE)
synth(f=22050,d=1,cf=4000,am=c(50,10), listen=TRUE)
install.packages(c("markdown", "mgcv", "mime"))
install.packages(c("class", "mgcv"), lib="C:/Program Files/R/R-3.1.0/library")
install.packages("devtools")
require(devtools)
install_github("neotoma", "ropensci")
require(neotoma)
install.packages(phyloclim)
install.packages('phyloclim')
library(phyloclim)
data(PNO)
head(PNO)
PNO[[1]]
names(PNO)
plot(PNO)
plot(PNO[[1]])
?density
?PNO
plotPNO(PNO)
plotPNO(PNO[[1]])
plotPNO(PNO[[2]])
cite(rioja)
cite('rioja')
library(rioja)
cite('rioja')
cite(rioja)
?rioja
cite('vegan')
library(vegan)
cite('vegan')
citeation('vegan')
citation('vegan')
citation('MASS')
citation('ape')
citation('phytools')
install.packages('phytools')
citation('phytools')
install.packages("devtools")
require(devtools)
install_github("neotoma", "ropensci")
require(neotoma)
install.packages("devtools")
require(devtools)
install_github("neotoma", "ropensci")
require(neotoma)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
require(devtools)
install_github("neotoma", "ropensci")
require(neotoma)
?over
?extract
??over
install.packages("rjags")
library(neotoma)
library(neotoma)
all.dataset <- get_dataset()
output.table <- do.call(rbind.data.frame,
lapply(all.datasets,
function(x){data.frame(type = x$dataset.meta$dataset.type,
submission = x$submission$submission.date)}))
all.dataset <- get_dataset()
output.table <- do.call(rbind.data.frame,
lapply(all.dataset,
function(x){data.frame(type = x$dataset.meta$dataset.type,
submission = x$submission$submission.date)}))
output.table <- do.call(rbind.data.frame,
lapply(all.dataset,
function(x){data.frame(type = x$dataset.meta$dataset.type,
submission = x$submission$submission.date[1])}))
output.table <- do.call(rbind.data.frame,
lapply(all.dataset,
function(x){aa <- data.frame(type = x$dataset.meta$dataset.type,
submission = x$submission$submission.date[1])
if(class(aa) == 'try-error'){
aa <- data.frame(type= NA,
submission = NA)
}
aa}))
pull.meta <- function(x){
aa <- data.frame(type = x$dataset.meta$dataset.type,
submission = x$submission$submission.date[1])
if(class(aa) == 'try-error'){
aa <- data.frame(type= NA,
submission = NA)
}
aa
}
for(i in 1:length(aa))pull.meta(all.dataset[[i]])
for(i in 1:length(all.dataset))pull.meta(all.dataset[[i]])
i
all.dataset[[i]]
all.dataset[[i]]$dataset.meta
all.dataset[[i]]$submission
x <- all.dataset[[i]]
data.frame(type = x$dataset.meta$dataset.type,
submission = x$submission$submission.date[1])
pull.meta <- function(x){
aa <- try(data.frame(type = x$dataset.meta$dataset.type,
submission = x$submission$submission.date[1]))
if(class(aa) == 'try-error'){
aa <- data.frame(type= NA,
submission = NA)
}
aa
}
for(i in 1:length(all.dataset))pull.meta(all.dataset[[i]])
output.table <- do.call(rbind.data.frame,
lapply(all.dataset, pull.meta))
head(output.table)
library(ggplot2)
ggplot(output.table, aes(x = submission, color = type))
ggplot(output.table, aes(x = submission, color = type)) + geom_bar()
output.table$submission
as.POSIXct(output.table$submission)
year(as.POSIXct(output.table$submission))
strptime(as.POSIXct(output.table$submission), '%Y')
strptime(as.POSIXct(output.table$submission), '%YY')
strftime(as.POSIXct(output.table$submission), format = '%Y')
output.table$year <- strftime(as.POSIXct(output.table$submission), format = '%Y')
ggplot(output.table, aes(x = year, color=type)) + geom_bar()
ggplot(output.table, aes(x = year, fill=type)) + geom_bar()
ggplot(output.table, aes(x = year, fill=type)) + geom_bar(position='jitter')
?geom_bar
ggplot(output.table, aes(x = year, fill=type)) + geom_bar(position='dodge')
ggplot(output.table, aes(x = year, y=__count__)) + geom_line()
ggplot(output.table, aes(x = year, y=..count..)) + geom_line()
cast(output.table, type ~ year, fun.aggregate=length)
library(reshape2)
cast(output.table, type ~ year, fun.aggregate=length)
dcast(output.table, type ~ year, fun.aggregate=length)
melt(dcast(output.table, type ~ year, fun.aggregate=length))
na.omit(melt(dcast(output.table, type ~ year, fun.aggregate=length)))
recast.years <- na.omit(melt(dcast(output.table, type ~ year, fun.aggregate=length)))
ggplot(recast.years, aes(x = variable, y=value, color = type)) + geom_line()
head(recast.years)
recast.years <- na.omit(melt(dcast(output.table, type ~ year, fun.aggregate=length)))
ggplot(recast.years, aes(x = variable, y=value, color = type)) + geom_line()
recast.years$variable
recast.years <- na.omit(melt(dcast(output.table, type ~ year, fun.aggregate=length)))
output.table$year <- as.numeric(strftime(as.POSIXct(output.table$submission), format = '%Y'))
recast.years <- na.omit(melt(dcast(output.table, type ~ year, fun.aggregate=length)))
recast.years$variable
recast.years$variable <- as.numeric(recast.years$variable)
ggplot(recast.years, aes(x = variable, y=value, color = type)) + geom_line()
output.table$year <- as.numeric(strftime(as.POSIXct(output.table$submission), format = '%Y'))
head(output.table)
table(output.table$year)
recast.years$variable <- as.numeric(as.character(recast.years$variable))
recast.years <- na.omit(melt(dcast(output.table, type ~ year, fun.aggregate=length)))
recast.years$variable <- as.numeric(as.character(recast.years$variable))
head(recast.years)
ggplot(recast.years, aes(x = variable, y=value, color = type)) + geom_line()
ggplot(recast.years, aes(x = variable, y=value, color = type)) + geom_bar()
ggplot(recast.years, aes(x = variable, y=value, color = type)) + geom_point()
ggplot(recast.years, aes(x = variable, y=value, color = type)) + geom_bar(stat='identity')
ggplot(recast.years, aes(x = variable, y=value, color = type)) + geom_bar(stat='identity', position='dodge')
ggplot(recast.years, aes(x = variable, y=value, fill = type)) + geom_bar(stat='identity', position='dodge')
ggplot(recast.years, aes(x = variable, y=value, fill = type)) + geom_bar(stat='identity', position='dodge') + scale_y_sqrt()
ggplot(recast.years, aes(x = variable, y=value, fill = type)) + geom_bar(stat='identity', position='dodge') + scale_y_sqrt() + scale_x_continuous(expand=c(0,0))
ggplot(recast.years, aes(x = variable, y=value, fill = type)) +
geom_bar(stat='identity', position='dodge') +
scale_y_sqrt(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0))
table(recast.years$type)
table(recast.years$type[recast.years$value > 0])
?subset
recast.years <- na.omit(melt(dcast(output.table, type ~ year, fun.aggregate=length)))
recast.years$variable <- as.numeric(as.character(recast.years$variable))
recast.years <- subset(recast.years, subset= type %in% c('pollen surface sample', 'pollen',
'loss-on-ignition', 'vertebrate fauna',
'geochronologic'))
recast.years
recast.years <- na.omit(subset(recast.years, subset= type %in% c('pollen surface sample', 'pollen',
'loss-on-ignition', 'vertebrate fauna',
'geochronologic')))
ggplot(recast.years, aes(x = variable, y=value, fill = type)) +
geom_bar(stat='identity', position='dodge') +
scale_y_sqrt(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0))
ggplot(recast.years, aes(x = variable, y=value, fill = type)) +
geom_bar(stat='identity', position='dodge') +
scale_y_sqrt(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0), breaks = seq(1980, 2015, by = 5))
ggplot(recast.years, aes(x = variable, y=value, fill = type)) +
geom_bar(stat='identity', position='dodge') +
scale_y_sqrt(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0), breaks = 1980:2014)
ggplot(recast.years, aes(x = variable, y=value, fill = type)) +
geom_bar(stat='identity', position='dodge') +
scale_y_sqrt(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0), breaks = seq(1980, 2015, by = 5)) +
theme(axis.title.x = element_text(family = 'serif',
face = 'bold.italic', size = 18),
axis.title.y = element_text(family = 'serif',
face = 'bold.italic', size = 18),
axis.text.x = element_text(family = 'serif',
face = 'italic', size = 14),
axis.text.y = element_text(family = 'serif',
face = 'italic', size = 14))
ggplot(recast.years, aes(x = variable, y=value, fill = type)) +
geom_bar(stat='identity', position='dodge') +
scale_y_sqrt(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0), breaks = 1980:2014) +
theme(axis.title.x = element_text(family = 'serif',
face = 'bold.italic', size = 18),
axis.title.y = element_text(family = 'serif',
face = 'bold.italic', size = 18),
axis.text.x = element_text(family = 'serif',
face = 'italic', size = 14),
axis.text.y = element_text(family = 'serif',
face = 'italic', size = 14))
ggplot(recast.years, aes(x = variable, y=value, fill = type)) +
geom_bar(stat='identity', position='dodge') +
scale_y_sqrt(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0), breaks = 1990:2014, limits = c(1988, 2014) +
theme(axis.title.x = element_text(family = 'serif',
face = 'bold.italic', size = 18),
axis.title.y = element_text(family = 'serif',
face = 'bold.italic', size = 18),
axis.text.x = element_text(family = 'serif',
face = 'italic', size = 14),
axis.text.y = element_text(family = 'serif',
face = 'italic', size = 14))
ggplot(recast.years, aes(x = variable, y=value, fill = type)) +
geom_bar(stat='identity', position='dodge') +
scale_y_sqrt(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0), breaks = 1990:2014, limits = c(1988, 2014)) +
theme(axis.title.x = element_text(family = 'serif',
face = 'bold.italic', size = 18),
axis.title.y = element_text(family = 'serif',
face = 'bold.italic', size = 18),
axis.text.x = element_text(family = 'serif',
face = 'italic', size = 14),
axis.text.y = element_text(family = 'serif',
face = 'italic', size = 14))
ggplot(recast.years, aes(x = variable, y=value, fill = type)) +
geom_bar(stat='identity', position='dodge') +
xlab('Year') + ylab('Number of Records') +
scale_y_sqrt(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0), breaks = 1990:2014, limits = c(1988, 2014)) +
theme(axis.title.x = element_text(family = 'serif',
face = 'bold.italic', size = 18),
axis.title.y = element_text(family = 'serif',
face = 'bold.italic', size = 18),
axis.text.x = element_text(family = 'serif',
face = 'italic', size = 14),
axis.text.y = element_text(family = 'serif',
face = 'italic', size = 14))
get_table
library(RCurl)
fromJSON('http://www.reddit.com/user/daledinkler/about/.json')
library(RJSONIO)
fromJSON('http://www.reddit.com/user/daledinkler/about/.json')
citation(neotoma)
citation('neotoma')
library(neotoma)
get_chroncontrol.download_list
get_chroncontrol
getAnywhere(get_chroncontrol.download_list)
getAnywhere(get_chroncontrol.default)
get_chroncontrol(579)
get_chroncontrol(1176)
get_download(579)
aa <- get_download(579)
get_chroncontrol(1776)
get_chroncontrol(get_download(1776))
install.packages('neotoma')
install.packages("neotoma")
library(neotoma)
get_chroncontrol(get_download(1776))
get_chroncontrol(get_download(1376))
library(neotoma)
output <- get_dataset(datasettype='pollen')
output_sites <- get_site(output)
plot(output_sites$long, output_sites$lat)
?get_dataset
?compile_list
library(neotoma)
all_pollen <- get_dataset(datasettype='pollen')
all_sites <- get_site(all_pollen)
install_github("rstudio/leaflet")
library(devtools)
install_github("rstudio/leaflet")
library(leaflet)
?addMarkers
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=all_sites$long, lat=all_sites$lat)
m
?addMarkers
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=all_sites$long[1:20], lat=all_sites$lat[1:20], popup = all_sites$site.name[1:20])
m
library(neotoma)
all_pollen <- get_dataset(datasettype='pollen')
all_pollen[[1]]
all_pollen[[1]]$pi.data
all_pollen[[1]]$dataset.meta
all_pollen[[1]]$site.data
all_pollen[[1]]$submission
aa <- get_download(all_pollen[[1]])
aa
aa[[1]]$sample.meta
aa[[1]]$dataset
all_pollen <- get_dataset(datasettype='pollen')
all_pub <- get_publication()
warnings()
all_pub[[1]]
update.packages()
update.packages()
library(raster)
aa <- raster('PalEON/sand.bsq')
??bsq
update.packages()
install.packages("installr")
library(installr);updater()
update.packages()
update.packages()
update.packages('knitr')
devtools::install_github("rstudio/leaflet")
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=89.4, lat=-43.0667)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-89.4, lat=-43.0667)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-89.4, lat=43.0667)
m  # Print the map
?addTiles
m <- leaflet() %>%
addTiles(lng=-89.4, lat=43.0667)
m
?leaflet
m <- leaflet() %>%
setView(lng=-89.4, lat=43.0667)
m  # Print the map
m <- leaflet() %>%
setView(lng=-89.4, lat=43.0667, zoom = 2)
m  # Print the map
m <- leaflet() %>%
setView(lng=-89.4, lat=43.0667, zoom = 4)
m  # Print the map
?setView
m
m <- leaflet() %>%
fitBounds(lng1=-88, lng2 = -90, lat1=42, lat2=44)
m  # Print the map
n
m <- leaflet() %>%
fitBounds(lng1=-90, lng2 = -88, lat1=42, lat2=44)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-89.4, lat=43.0667)
m  # Print the map
library(ggmap)
library(ggmaps)
install.packages("ggmap")
aa <- get_map(location=c(-89, 42))
library(ggmaps)
library(ggmap)
aa <- get_map(location=c(-89, 42))
aa
ggmap(aa)
library(neotoma)
aa <- get_dataset(taxonname="Bison*")
aa <- get_dataset(taxonname="Bison")
install.packages("paleobioDB")
library(paleobioDB)
??paleobioDB
library(neotoma)
ostracode <- get_dataset(datasettype='ostracod')
ostracode <- get_dataset(datasettype='ostracode')
chemistry <- get_dataset(datasettype='chemistry')
chemistry <- get_dataset(datasettype='chemistry')
?get_dataset
chemistry <- get_dataset(datasettype='water chemistry')
ostracode <- get_dataset(datasettype='ostracode surface sample')
ostracode_dl <- get_download(ostracode)
ostracode <- get_dataset(datasettype='ostracode surface sample', gpid='Iowa')
chemistry <- get_dataset(datasettype='water chemistry', gpid = 'Iowa')
ostracode_dl <- get_download(ostracode)
chemistry_dl <- get_download(chemistry)
counts(chemistry_dl[[1]])
counts(chemistry_dl)
do.call(counts(chemistry_dl), rbind.data.frame)
do.call(rbind.data.frame,counts(chemistry_dl))
?get_dataset
ostracode <- get_dataset(datasettype='ostracode surface sample', loc=c(-100,43,-92,48))
chemistry <- get_dataset(datasettype='water chemistry', loc=c(-100,43,-92,48))
diatoms   <- get_dataset(datasettype='diatom', loc=c(-100,43,-92,48))
diatoms   <- get_dataset(datasettype='diatoms', loc=c(-100,43,-92,48))
diatoms   <- get_dataset(datasettype='diatom surface sample', loc=c(-100,43,-92,48))
pollen    <- get_dataset(datasettype='pollen surface sample', loc=c(-100,43,-92,48))
ostracode_dl <- get_download(ostracode)
ostracode_dl
ostracode_dl[[1]]
ostracode_dl[[1]]$taxon.list
ostracode_dl[[1]]$counts
ostracode_dl[[1]]$lab.data
ostracode_dl[[1]]$chronologies
chemistry_dl <- get_download(chemistry)
diamtom_dl   <- get_download(diatoms)
pollen_dl    <- get_download(pollen)
plot(ostracode)
library(maps)
?maps
??maps
map('usa', add=TRUE)
map('world')
plot(ostracode)
map('world', add=TRUE)
map('world')
map('usa')
points(get_site(ostracode)[,c('lat', 'long'])
points(get_site(ostracode)[,c('lat', 'long')])
points(get_site(ostracode)[,c('long','lat')])
map('usa')
points(get_site(ostracode)[,c('long','lat')])
chem_counts      <- do.call(rbind.data.frame,counts(chemistry_dl))
ostracode_counts <- do.call(rbind.data.frame,counts(ostracode_dl))
diatom_counts <- do.call(rbind.data.frame,counts(diatom_dl))
pollen_counts <- do.call(rbind.data.frame,counts(pollen_dl))
pollen_dc <- compile_downloads(pollen)
pollen_dc <- compile_downloads(pollen_dl)
head(pollen_dc)
?compile_taxa
pollen_dc <- compile_downloads(compile_taxa(pollen_dl, 'P25'))
dim(pollen_dc)
pollen_dc[1,]
pollen_dc_ppt <- polen_dc[,11:34] / rowSums(pollen_dc[,11:34], na.rm=TRUE)
pollen_dc_ppt <- pollen_dc[,11:34] / rowSums(pollen_dc[,11:34], na.rm=TRUE)
pollen_dc_ppt[1,]
hclust(dist(pollen_dc_ppt))
plot(hclust(dist(pollen_dc_ppt)), hang=-1)
plot(hclust(dist(pollen_dc_ppt)))
plot(hclust(dist(pollen_dc_ppt)), pch=0.5)
plot(hclust(dist(pollen_dc_ppt)), cex=0.5)
chem_counts      <- do.call(rbind.data.frame,counts(chemistry_dl))
counts(chemistry_dl[[1]])
counts(chemistry_dl[[2]])
counts(chemistry_dl[[100]])
counts(chemistry_dl[[140]])
library(ncdf)
install.packages("ncdf")
install.packages("ncdf")
temp <- nc_open('../../GriddedClimate/CCSM3/')
library(ncdf4)
temp <- nc_open('../../GriddedClimate/CCSM3/')
library(devtools)
1950 - 305
1950 - 459.4
1950 - 776.3
1950 - 1026.9
library(bchron)
install.packages("bchron")
install.packages("Bchron")
library(Bchron)
BchronCalibrate(280, 60, calCurves = 'intcal13')
aa <- BchronCalibrate(280, 60, calCurves = 'intcal13')
median(aa$date1$ageGrid)
mean(aa$date1$ageGrid)
sd(aa$date1$ageGrid)
aa <- BchronCalibrate(370, 50, calCurves = 'intcal13')
mean(aa$date1$ageGrid)
aa <- BchronCalibrate(370, 50, calCurves = 'intcal13'); mean(aa$date1$ageGrid);sd(aa$date1$ageGrid)
aa <- BchronCalibrate(890, 60, calCurves = 'intcal13'); mean(aa$date1$ageGrid);sd(aa$date1$ageGrid)
aa <- BchronCalibrate(1100, 30, calCurves = 'intcal13'); mean(aa$date1$ageGrid);sd(aa$date1$ageGrid)
citation('Bchron')
74/7
74/8
74/6
install.packages("paleoSig")
install.packages("palaeoSig")
?rioja
install.packages("rioja")
??gstat
library(neotoma)
?compile_taxa
data.frame(1:20, rnorm(20) + 1:20)
data.frame(a = 1:20, b = rnorm(20) + 1:20)
aa <- data.frame(a = 1:20, b = rnorm(20) + 1:20)
lm(a ~ b, data = aa)
resid(lm(a ~ b, data = aa))
aa
predict(aa) + resid(aa)
bb <- lm(a ~ b, data = aa)
predict(bb) + resid(bb)
predict(bb)
bb
bb
aa
predict(bb) - resid(bb)
predict(bb) + resid(bb)
setwd("~/WISC/Neotoma/publication_work")
list.files()
library(RMySQL, quietly = TRUE, verbose = FALSE)
mydb <- dbConnect(MySQL(), user = 'root', password = 'c@mpf1re',
dbname = 'neotoma', host = 'localhost')
publications <- dbGetQuery(mydb, "select * from publications")
pander::pandoc.table(publications[1,c(1, 3, 4, 5)], table.split.cells = 8,
use.hyphening = TRUE, split.table = 100)
